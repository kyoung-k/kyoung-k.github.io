{"meta":{"title":"Graffiti Book of KYoung","subtitle":"Graffiti Book","description":"","author":"KYoung","url":"https://kyoung-k.github.io","root":"/"},"pages":[{"title":"all-archives","date":"2021-02-04T06:22:35.069Z","updated":"2021-02-04T06:22:35.069Z","comments":false,"path":"all-archives/index.html","permalink":"https://kyoung-k.github.io/all-archives/index.html","excerpt":"","text":""},{"title":"all-categories","date":"2021-02-04T06:22:35.069Z","updated":"2021-02-04T06:22:35.069Z","comments":false,"path":"all-categories/index.html","permalink":"https://kyoung-k.github.io/all-categories/index.html","excerpt":"","text":""},{"title":"all-tags","date":"2021-02-04T06:22:35.070Z","updated":"2021-02-04T06:22:35.070Z","comments":false,"path":"all-tags/index.html","permalink":"https://kyoung-k.github.io/all-tags/index.html","excerpt":"","text":""}],"posts":[{"title":"2021년 읽은 책","slug":"2021-book","date":"2021-03-24T15:00:00.000Z","updated":"2021-05-17T07:25:50.138Z","comments":true,"path":"2021/03/25/2021-book/","link":"","permalink":"https://kyoung-k.github.io/2021/03/25/2021-book/","excerpt":"2021년 읽은 책의 리뷰나 거창한 정리 글은 아니고, 읽으면서 부족했던 부분, 추가적으로 깊이 있게 알아봐야 할 내용을 정리한다.","text":"2021년 읽은 책의 리뷰나 거창한 정리 글은 아니고, 읽으면서 부족했던 부분, 추가적으로 깊이 있게 알아봐야 할 내용을 정리한다. 1. 함수형 반응형 프로그래밍 - FRP 입문자를 위한 종합 안내서 함수형 반응형 프로그래밍에 관한 최초의 종합 안내서. FRP는 관찰자 패턴의 잠재적 버그 원인을 근본적으로 차단하여 더 복잡한 시스템으로 쉽게 확장할 수 있도록 해준다. 이 책의 저자는 FRP 프레임워크인 소듐(Sodium)의 창시자로서, FRP의 기초부터 기존 프로젝트를 점진적으로 FRP 시스템으로 탈바꿈시키는 방법까지 친절히 안내한다. https://www.aladin.co.kr/shop/wproduct.aspx?ItemId=114161078 함수형 프로그래밍 학습을 위해 구입해서 봤지만 중도 포기했다. 좋은 내용이지만 원서가 2016년이라 그런지 예제들이 old 한 느낌이었다. 확실히 프로그래밍은 빠르게 진화한다고 느꼈고, 출판된 지 오래된 책은 베스트셀러 및 고전 등의 책을 사야겠다고 생각하게 됐다. 그렇다고 나쁜 책은 아니다 단지 Sodium으로 진행되는 내용들이 나한텐 와 닿지 않았다. Spring Reactor Webflux를 더 공부해야겠다. Spring WebFlux - 2021.01 2. 함수형 사고 - 객체지향 개발자에서 함수형 개발자로 거듭나기 객체지향 언어에 길든 개발자들에게 예제를 통해 함수형으로 ‘생각’하는 법을 깨닫게 해주는 책. 스칼라 같은 함수형 언어의 수요가 늘고 있지만 자바 같은 객체지향에 익숙한 개발자들은 함수형 패러다임으로 넘어가는 데 어려움을 겪고 있다. 단순히 새 언어 문법을 익히는 것이 아니라 사고방식 자체를 바꿔야 하기 때문이다. 이 책은 자바 8, 스칼라, 클로저, 그루비 예제를 통해 객체지향 개발자가 함수형으로 사고를 전환하고 시야를 넓히는 일을 돕는다. 익숙한 사고방식을 바꾸려 노력하는 자바 개발자에게 소중한 디딤돌이 될 것이다. https://www.aladin.co.kr/shop/wproduct.aspx?ItemId=85956851 이 책 역시 함수형 프로그래밍 학습을 위해 구입했다, 자바에서 함수형 프로그래밍을 구현하는데 도움이 될까 싶어 구입해서 봤지만 글쎄.. 전반적인 함수형 프로그래밍 기법을 설명하는데 여러 가지 함수형 언어를 예제로 다룬다. 자바만을 학습하기 위한 용도로는 별로인 느낌 자바 함수형 프로그래밍을 학습하는 용도로 Functional Programming in Java 8 - 자바 8 람다의 힘 책을 구입해서 봐야겠다. 그리고 함수형 언어로 하스켈이나 클로저를 학습하기보단 코틀린을 나중에 학습하는 게 좋겠다란 생각이다. 코틀린 Functional Programming in Java 8 - 자바 8 람다의 힘 - 2021.02 3. 스프링으로 하는 마이크로서비스 구축 기존 일체형 애플리케이션을 마이크로서비스로 나누고 온프레미스나 클라우드로 배포하려는 자바, 스프링 개발자와 아키텍트를 위한 책이다. 스프링 부트, 스프링 클라우드와 도커, 쿠버네티스, 이스티오, EFK 스택, 프로메테우스, 그라파나 등의 오픈 소스 도구를 조합해 마이크로서비스를 구축하는 방법을 설명한다. 스프링 기반의 자바 개발과 오픈 소스 도구 사용법을 실습 위주로 설명하며, 최소한의 시간 투자만으로도 다양하고 넓은 범위의 지식을 학습할 수 있게끔 효율적으로 구성돼 있다. https://www.aladin.co.kr/shop/wproduct.aspx?ItemId=256544920 MSA 학습을 위해 이책을 구입했다. 마이크로 서비스 아키텍처의 개념보단 스프링으로 MSA를 구축하는 방법 학습을 위해, MSA를 제대로 구축 하기엔 정말 방대한 내용의 학습이 필요할거 같다. 마이크로 서비스의 예제는 심플했고 아키텍처를 구축하는 예제도 심플했다. 하지만 심플할 수 밖에 없다 중요 포인트만 설명하면서 방대한 내용을 함축했다. 이책을 기반으로 MSA를 구축해보면서 세세한 내용을 알아가면 좋을거같다. 도커 쿠버네티스 - 2021.03 4. Functional Programming in Java 8 - 자바 8 람다의 힘 자바 8의 람다 표현식을 사용하여 애플리케이션의 품질을 향상할 수 있도록 해주며 더 효율적인 방법으로 프로그래밍을 설계하도록 하고, JDK 라이브러리에 추가된 여러 기능의 장점을 알아본다. 더불어 람다 표현식에 대한 개념을 익히기 위해 엄선된 예제를 제공한다. 엄선된 예제를 통해 람다 표현식의 설계 내부에 숨겨져 있는 원리를 이해할 수 있도록 하며, 특히 새로운 기능들이 왜 더 좋은 코드를 만들 수 있도록 해주는지 그 이유를 이해하게끔 도와준다. https://www.aladin.co.kr/shop/wproduct.aspx?ItemId=42133916 자바로 함수형 프로그래밍을 하는 방법을 학습하기 위해 구매했다, 일전에 봤던 함수형 반응형 프로그래밍, 함수형 사고 책보단 좀 더 구체적으로 자바에서 구현하는 함수형 프로그래밍 방법을 설명해준다. 함수형 프로그래밍이라는 걸 알게 되고 업무에서도 최대한 써보려 노력하고 이젠 얼추 흉내는 내는 거 같지만 아직도 자세하게는 모르겠다. Stream을 사용해서 내부 반복을 사용하고, 변수에 항상 final로 선언하여 작업하는 등 하지만 주로 하는 업무에서의 비즈니스 처리를 할 땐 Functional Interface나 람다를 사용하는 케이스는 적은 거 같다, Stream을 사용할 때나 쓰는 정도? Functional Interface는 아키텍처 설계 수준에서 활용하면 좋을 거 같은데 아직 전체적으로 바라볼 수 있는 시야가 좁은 거 같다. 이 책의 마지막 장에 이런 내용이 있었다, 객체지향과 함수형 프로그래밍이 서로 조화가 되어 사용될 때 더 빛을 볼 수 있을 거라고 그래서 이제 객체지향에 대해서도 좀 더 깊게 공부해봐야겠다. 객체지향 프로그래밍도 제대로 공부하진 않았으니 이제 좀 깊게 공부해볼 생각이다. 그리고 시간이 된다면 모던 자바 인 액션 책을 다시 펴보자. 객체지향 디자인패턴 - 2021.04","categories":[{"name":"book","slug":"book","permalink":"https://kyoung-k.github.io/categories/book/"}],"tags":[{"name":"book","slug":"book","permalink":"https://kyoung-k.github.io/tags/book/"}]},{"title":"예약시스템 토이 프로젝트 계획","slug":"template-project-plan","date":"2021-02-22T15:00:00.000Z","updated":"2021-03-24T15:00:00.000Z","comments":true,"path":"2021/02/23/template-project-plan/","link":"","permalink":"https://kyoung-k.github.io/2021/02/23/template-project-plan/","excerpt":"개인 토이 프로젝트 정리 Post. 개인 토이 프로젝트를 뭘 할까 고민하다가 예약 시스템으로 결정했다. 그에대한 계획을 정리하고자 한다.","text":"개인 토이 프로젝트 정리 Post. 개인 토이 프로젝트를 뭘 할까 고민하다가 예약 시스템으로 결정했다. 그에대한 계획을 정리하고자 한다. MSA 구축 학습을 위해 어떤 내용을 해볼까 하다 예약 시스템으로 결정했다. 먼저 1차적인 학습 목표는 스프링 클라우드를 이용해서 MSA를 구축해보는 것이고, 후에 이 시스템을 쿠버네티스 환경으로 변환하는 작업을 진행해볼까 한다. 먼저 구축을 완료해보고 해당 시스템을 지속 개선, Template Project를 구성하는 게 목표다. 1차 기술 요구사항 Spring Boot 기반 RestAPI 서비스 Spring Cloud 기반 MSA Spring Data JPA 기반 데이터 관리 1차 목표는 심플하게 MSA를 구축하는게 목표고 구축한 시스템을 기반으로 공통 코어 개발 및 공통 기능 개발이다. 1차 비즈니스 요구사항시스템에 대한 비즈니스 요구사항을 심플하게 정리하자. 다수의 대상의 예약을 관리한다. 대상은 예약 스케줄을 설정할 수 있다. 대상은 아이템을 소유하고 스케줄에 대한 아이템을 예약할 수 있다. 아이템은 요금을 설정할 수 있다. 대상은 상품을 설정할 수 있다. 상품은 1 ~ N 개의 아이템을 설정할 수 있다. 상품은 할인율을 설정할 수 있다. 상품에 대한 아이템, 아이템에 대한 상품으로 예약할 수 있다. 비회원도 예약할 수 있다. 회원은 상품으로 할인된 요금으로 예약할 수 있다. 1차 예약시스템 ERD및 마이크로 서비스 구성ER 다이어그램 역시 심플하게 다이어그램툴 ERD Entity의 색상 구분으로 서비스를 구현한다.MasterService, ItemService, GoodsService, ReservationService, MemberService, CombinationService 6개의 마이크로 서비스로 MSA를 구축한다. 간단한 MSA 학습이 목적이라서 구현 서비스를 줄였다. MasterService, ReservationService, CompositeService 3개의 마이크로 서비스로 심플하게 구성해보자. 기술 요구사항 변경1차 목표에서 조금 수정이됬다. Spring webflux functional endpoint로 api를 구성하고, Spring data r2dbc로 리액티브 시스템을 구성한다. Spring webflux - Functional endpoint Spring data r2dbc Docker - mysql 처음 환경을 구성할 때 h2 메모리 DB용 서비스를 띄워서 프로젝트만으로 환경을 구성하려고 했다, 그런데 h2 메모리 DB는 외부에서 접속을 하려면 tcp통신을 이용해서 접근을 해야 하는데 r2 dbc는 tcp접속을 지원하지 않았다, 며칠의 삽질 끝에 Mysql DB를 Docker에 띄워서 구성하고 r2 dbc 환경을 구성할 수 있었다. 대충 2주 조금 넘게 Spring webflux - Functional endppoint로 api 서버 개발을 진행 중인데 더디다.. 아직 인터넷으로 정보들을 검색하기가 쉽지 않고 리액티브(Mono, Flux)에 대한 이해도가 낮아서 이런저런 시험도 해보고 이렇게도 되나 저렇게도 되나 이것저것 만져보며 천천히 진행 중이다. 오랜만에 새로운 패러다임으로 공부해보니 답답한 감도 있긴 한데 재미있고 성취감이 있다, 다만 역시 업무 외 시간을 써서 하려다 보니 시간이 많이 부족하긴 하다. 학습보단 그래도 가정, 개인 생활처음 공부에 대한 목표를 세웠을 때 여러 가지 이유 중 하나가 딸아이한테 아빠가 공부하는 모습을 보여주는 거였다, 어디서 주서들은 건지 내생 각인 지는 기억이 나지 않은데 아빠의 공부하는 모습을 보여주면 딸아이도 따라서 공부하는 습관이 자연스럽게 생기지 않을까 하는 생각이었는데, 아직 딸이 너무 어린 거 같다 딸 옆에서 일단 책을 읽을 수가 없고 (옆에서 읽으면 장난을 걸기 일쑤다.) 평소엔 아빠한테 관심 없어 보이는 딸이 책만 펴서 보면 같이 보자며 관심을 보이는데 같이 책을 보면 다행이지만 그렇지가 않다. 그래서 딸아이를 재운 다음 책을 보던가 토이 프로젝트를 진행하던가 하는데 딸아이가 잠이 들면 빠르면 10시 반 보통 11시를 넘기기 일쑤다. 책이야 한 시간 ~ 한 시간 반 정도 읽고 잠을 청하면 되는데 토이 프로젝트는 한 시간이라는 시간은 좀 짧은 거 같다 특히 새로운 걸 학습하기엔.. 코딩하다 막히고 고민하다 보면 한 시간이 훌쩍 지나가 버린다. 내가 토이 프로젝트 목표를 좀 높게 잡은 것도 이유 중 하나이려나.. 이런저런 핑계로 처음 목표한 거 보단 매우 더디게 진행될 거 같은 생각이다. 그리고 살도 빼야 된다. 돌아오는 10월에 동생 놈 결혼인데 인생 처음 80킬로를 넘어 84킬로 까지 쪘다. 심각하다 운동도 해야 되고 공부도 해야 되고 딸아이와 시간도 보내야 한다, 하루는 24시간이 한정돼있고 포기할 수 있는 건 포기해야 될 거 같은데 아무래도 토이 프로젝트를 좀 더디게 진행하면서 시간을 할애해야 하지 않을까.. 운동은 새벽시간 밖에 할 시간이 없다, 일찍 자고 일찍 일어나 운동하고 남은 시간에 조금 책을 읽는걸로 해야되지않을까 싶다. 10시 취침 ~ 5시45분 기상 6시 ~ 7시 헬스장에서 운동 7시 ~ 7시 30분까지 씻고 준비하고 7시 30분 ~ 8시 20분 까지 독서 8시 40분 까지 딸아이 깨워서 등원후 출근 10 - 7 탄력근무로 인해 가능한 스케쥴이다.토이프로젝트는 회사에서 시간생길때마다 틈틈히 조금씩 진행해야하지 않을까 싶다. -2021.05.17","categories":[{"name":"학습","slug":"학습","permalink":"https://kyoung-k.github.io/categories/%ED%95%99%EC%8A%B5/"}],"tags":[{"name":"학습","slug":"학습","permalink":"https://kyoung-k.github.io/tags/%ED%95%99%EC%8A%B5/"},{"name":"Toy Project","slug":"Toy-Project","permalink":"https://kyoung-k.github.io/tags/Toy-Project/"}]},{"title":"L-Hotel 프로젝트 복기","slug":"L-Hotel-프로젝트-복기","date":"2021-01-14T15:00:00.000Z","updated":"2021-01-14T15:00:00.000Z","comments":true,"path":"2021/01/15/L-Hotel-프로젝트-복기/","link":"","permalink":"https://kyoung-k.github.io/2021/01/15/L-Hotel-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EB%B3%B5%EA%B8%B0/","excerpt":"2020년 마지막 프로젝트를 마쳤다. 어려운 프로젝트들이 많았지만 이번엔 좀 특별했다. 프로젝트를 마치고 나오면서 작성한 글의 백업을 잊고 포맷해버려서 애써 작성한 글이 날아갔다. 아쉽지만 그래도 내가 목표한 일이기에 간단하게나마 다시 작성한다.","text":"2020년 마지막 프로젝트를 마쳤다. 어려운 프로젝트들이 많았지만 이번엔 좀 특별했다. 프로젝트를 마치고 나오면서 작성한 글의 백업을 잊고 포맷해버려서 애써 작성한 글이 날아갔다. 아쉽지만 그래도 내가 목표한 일이기에 간단하게나마 다시 작성한다. 이 글은 모 기업이나 프로젝트를 같이 진행한 인원을 비난하는 글이 아닌 이번에 경험한 일을 바탕으로 다음엔 더 나은 업무를 진행하기 위한 목적으로 작성되었습니다. 요구사항 - 개선요건의 프로젝트는 요건을 확실하게 짚자이번 프로젝트의 목적은 UI, UX 개선이었다. 프로젝트 투입하기 전에 들었던 업무 내용은 단순했다, “그냥 간단한 화면 UI(디자인) 변경만 있을 거야” 정확한 프로젝트의 목적과 요건은 모른 채 프로젝트에 투입이 됐고, 내부에선 모 컨설팅 업체가 UI, UX 컨설팅을 먼저 진행하고 기획, 디자인을 담당했다. 컨설팅을 위한 것이었는지 잘 모르겠지만 프로젝트의 요구사항에 대한 내용이 없어 보였다. 실제로도 관련 문서가 없었고 화면 설계만 보고 개발을 진행했다. 요구사항에 대한 내용을 파악하지 않은 나비효과는 엄청났다 다음엔 반드시 정확한 요구사항을 짚고 넘어가야 한다, 요구사항 관련 문서가 없다면 문제를 제기해야 하고 문제가 되지 않는다면 요구사항에 준하는 문서를 근거로 잡아야 한다. ex) 화면 설계서?, 개발을 할 땐 기준이 필요하고 그 기준은 화면 설계서나 SB지만 그 문서들이 정답은 아니다. 요구사항 관련 문서를 파악하자. 개발환경 - 처음 경험하는 환경은 지향하자개인적으로 처음 경험하는 개발 환경(언어, 프레임워크)으로 진행하는 프로젝트는 지향한다. 과거 ExtJS로 고생했던 경험 때문인데 이번엔 어도비의 AEM이었다. AEM 관리자의 일부분이 ExtJS로 구현되어있어서 옛 생각에 좀 반가우면서 불안했고 결과는 역시 처음 경험해보는 환경의 프로젝트는 좀 더 보수적으로 지향해야겠다. 기본적인 문법도 모른 채 학습도 없이 기존 소스만 참고해서 업무를 진행하는 건 고객에게도 민폐 나도 고통스럽다. History - 모든걸 기록하자회의록, 업무일지, 업무 내용 등 구두로 오가는 모든 내용들을 기록하자. 업무 내용을 구두로 전달받았다면 정리해서 메일로 보내든 메신저로 보내든 재확인하고 그걸 이력으로 남기고 기록하자. 최소한의 개인적인 방어 행동이고 훗날 일어날지도 모를 상황에서 근거가 될 수 있다. 개발자는 최후방 전선이고 우리도 모르는 사이 그리고 어쩌면 상대도 모르는 사이에 발생한 또는 준비된 융단폭격의 제일 큰 희생양이 될 수 있다. 일정관리 - 어필 하자이번 프로젝트에서 기획 전체 일정이 2달 정도 딜레이 됐다. 다시 생각해보니 말도 안 되는 상황이다. 나와 우리(개발팀)는 조금 안일하게 대처한 거 같다. 좀 더 강하게 어필했어야 했다고 생각된다 단순하게 늘 그래 왔듯이 ‘어쩔 수 없이 야근으로 때우겠구나’라고 생각한 거 같다. 그리고 야근으로 때워서 개발 일정은 맞췄다. 경주마처럼 되어 앞만 보고 달려 개발 일정을 마무리하니 이후의 요건 변경, 수정사항, 추가사항을 유연하게 대처하기 힘들었다. 내 코드는 유연하게 대처하기 쉽도록 작성되지 않았고 고통만 늘어갔다. 데이터 - 충분한 데이터를 요구하자처음부터 새롭게 구축하는 프로젝트가 아니라면 기존 레거시 시스템의 개발환경에 대한 데이터는 충분히 확보한 채 개발하자. 이번 프로젝트도 역시 테스트 데이터가 충분하지 않았다, 적어도 단위 테스트 시작할 때의 데이터만 미리 확보되었어도 테스트 기간의 고통은 조금 줄어들었지 싶다. 반응형 화면가끔 반응형 화면인데 WEB, Mobile WEB 화면이 나뉘어서 구현이되는 경우가 있다. 이 경우엔 이벤트 처리를 함께 처리하겠다는 생각은 접자. 나뉘어져서 구현된 이유는 분명히 있을거고 그 나뉜 부분의 이벤트 처리를 한번에 하는건 오히려 더 복잡하게만 만들더라, 나뉘어진 화면의 이벤트 처리는 개별로 개발하자. 화면설계서 - 정답은 아니지만 기준으로 만들자처음의 요구사항과 관련된 내용인데 화면 설계서가 정답은 아니다. 프로젝트 막바지 우리를 힘들게 했던 이유 중 한 가지가 기존에 적용된 기능이 빠졌다는 내용이다. 개선 프로젝트 특성상 화면 설계서에서 누락될 수도 있다. 누락된 기능 등은 개발자가 분석 중에 빠진 내용을 알려줄 수 있고, 확인할 수도 있다. 개발 일정이 그나마 넉넉하다면.. 개발 일정도 촉박한데 AS-IS 소스는 분석하기 힘들게 구현돼있고(Javascript innerHTML), 주석도 없고 하면 난감한 상황이 발생한다. 개발을 진행하는 문서를 기준으로 만들고 확인을 받자. 기획자에게 현업한테 컨펌을 받든 운영팀한테 확인을 받든 개발자가 개발을 진행할 때 참고하는 문서를 기준으로 만들어야 한다. 그리고 그 기준의 문서가 변경되거나 추가되는 요구사항이 발생한다면 발생한 요구사항에 대한 일정을 확보하자. SI 개발 - 이바닥 참 힘들다이번 프로젝트의 History를 이야기해보면 현업에서 원래 담당하던 부서가 있었지만 새로운 개혁? 혁신? 을 위해 원래 담당하던 부서가 아닌 다른 부서가 프로젝트를 진행했다. 진행하던 부서가 끝까지 진행하면 문제가 없었을 건데 개발 일정이 끝날 때쯤 그 두 개의 부서가 합쳐지게 됐고, 원래 담당하던 사람들이 프로젝트에 배정되면서 요구사항이 뒤틀렸다. 따지고 보면 개발자들이 이런 상황을 예방하거나 예측하고 일을 할 순 없다. 오랜만에 일을 미친 듯이 하면서 현타가 쌔게 찾아왔었는데 모르겠다. 제대로 큰 문제없이 재미있게 프로젝트를 진행한 게 오래돼서 그런지 가끔은 SI 개발일을 하는 게 참 힘들다. 개발자라면 SI 개발을 하지 말라는 말을 인터넷에서 쉽게 볼 수 있는데 그 말이 요즘은 많이 이해된다.","categories":[{"name":"잡담","slug":"잡담","permalink":"https://kyoung-k.github.io/categories/%EC%9E%A1%EB%8B%B4/"}],"tags":[{"name":"복기","slug":"복기","permalink":"https://kyoung-k.github.io/tags/%EB%B3%B5%EA%B8%B0/"}]},{"title":"VSCode에서 Spring Initializr를 사용해 Maven Multi Module 환경설정 하기.","slug":"vscode-spring-boot-module","date":"2020-08-27T15:00:00.000Z","updated":"2020-09-05T15:00:00.000Z","comments":true,"path":"2020/08/28/vscode-spring-boot-module/","link":"","permalink":"https://kyoung-k.github.io/2020/08/28/vscode-spring-boot-module/","excerpt":"토이 프로젝트는 VSCode를 사용해서 진행해 보고 싶었다. 인텔리 J를 돈 주고 사용하고 싶진 않았고, (회사에서 사주면 쓰겠지만) 이클립스는 느리다. 그동안 근 10년 가까이 이클립스를 사용해오면서 크게 불만은 없었는데 (중간 2년은 인텔리 J 써봄) IDE에 관심이 없다가 최근 VSCode의 칭찬을 많이 듣게 되면서 관심을 가지게 되었고, 토이 프로젝트에서 써보기로 했다.","text":"토이 프로젝트는 VSCode를 사용해서 진행해 보고 싶었다. 인텔리 J를 돈 주고 사용하고 싶진 않았고, (회사에서 사주면 쓰겠지만) 이클립스는 느리다. 그동안 근 10년 가까이 이클립스를 사용해오면서 크게 불만은 없었는데 (중간 2년은 인텔리 J 써봄) IDE에 관심이 없다가 최근 VSCode의 칭찬을 많이 듣게 되면서 관심을 가지게 되었고, 토이 프로젝트에서 써보기로 했다. 먼저 Spring boot Multi Module 환경을 Maven으로 구성해보고 기록을 하지 않으면 다음번엔 높은 확률로 까먹을게 뻔하니 이제 정리하고 기록을 하겠다. 사전 개발환경 Java, Maven, vscode, vscode의 플러그인(Java Extension Pack, Spring Boot Extension Pack)등이 설치되어야 한다. Spring Initializr 프로젝트 생성Spring boot 프로젝트 생성하기 전에 Parent 폴더를 생성한다. tp-kyoung 부모 프로젝트로 사용할 tp-kyoung 폴더 안에 Spring boot Project를 두 개 생성한다. 단축키 ctrl + shift + p 또는 F1 으로 Command Palette 창을 열고 Spring Initializr를 입력 하면 Spring Initializr: Create Maven Project... 자동완성 기능으로 나오는 메이븐 프로젝트 생성을 선택해서 tp-api, tp-core 두개의 module 프로젝트를 생성하고 tp-kyoung 부모 폴더에 pom.xml 생성한다 pom.xml 설정tp-api나 tp-core프로젝트의 pom.xml내용을 Parent pom.xml파일에 통째로 복사한 다음 아래 첫번째 탭 내용과 같이 수정한다. tp-api, tp-core프로젝트의 pom.xml 파일들도 아래 두번째 탭 내용과 같이 수정한다. pom.xmlxmlxml12345678910111213141516171819202122232425262728293031323334&lt;!-- parent pom.xml --&gt;&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt; &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt; &lt;parent&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt; &lt;version&gt;2.3.3.RELEASE&lt;/version&gt; &lt;relativePath/&gt; &lt;!-- lookup parent from repository --&gt; &lt;/parent&gt; &lt;groupId&gt;io.kyoung.toy&lt;/groupId&gt; &lt;!-- artifactId 수정 --&gt; &lt;artifactId&gt;tp-kyoung&lt;/artifactId&gt; &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt; &lt;!-- name 수정 --&gt; &lt;name&gt;tp-kyoung&lt;/name&gt; &lt;description&gt;Demo project for Spring Boot&lt;/description&gt; &lt;!-- packaging 추가 --&gt; &lt;packaging&gt;pom&lt;/packaging&gt; &lt;properties&gt; &lt;java.version&gt;14&lt;/java.version&gt; &lt;/properties&gt; &lt;!-- modules 추가 --&gt; &lt;modules&gt; &lt;module&gt;tp-core&lt;/module&gt; &lt;module&gt;tp-api&lt;/module&gt; &lt;/modules&gt;&lt;/project&gt;1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859&lt;!-- module pom.xml --&gt;&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt; &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt; &lt;!-- parent 수정 --&gt; &lt;parent&gt; &lt;groupId&gt;io.kyoung.toy&lt;/groupId&gt; &lt;artifactId&gt;tp-kyoung&lt;/artifactId&gt; &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt; &lt;/parent&gt; &lt;!-- groupId 삭제 --&gt; &lt;artifactId&gt;tp-api&lt;/artifactId&gt; &lt;!-- version 수정 --&gt; &lt;version&gt;${parent.version}&lt;/version&gt; &lt;name&gt;tp-api&lt;/name&gt; &lt;description&gt;Demo project for Spring Boot&lt;/description&gt; &lt;properties&gt; &lt;java.version&gt;14&lt;/java.version&gt; &lt;/properties&gt; &lt;dependencies&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter&lt;/artifactId&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-devtools&lt;/artifactId&gt; &lt;scope&gt;runtime&lt;/scope&gt; &lt;optional&gt;true&lt;/optional&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt; &lt;scope&gt;test&lt;/scope&gt; &lt;exclusions&gt; &lt;exclusion&gt; &lt;groupId&gt;org.junit.vintage&lt;/groupId&gt; &lt;artifactId&gt;junit-vintage-engine&lt;/artifactId&gt; &lt;/exclusion&gt; &lt;/exclusions&gt; &lt;/dependency&gt; &lt;/dependencies&gt; &lt;build&gt; &lt;plugins&gt; &lt;plugin&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt; &lt;/plugin&gt; &lt;/plugins&gt; &lt;/build&gt;&lt;/project&gt; 중간 확인을 위해 Maven clean install 실행. tp-core 프로젝트 설정tp-core 프로젝트에서 TpCoreApplication.java TpCoreApplicationTests.java 파일 삭제. (core 프로젝트에서는 Run 기능을 사용하지 않기 때문) tp-core pom.xml 파일에서 아래 부분 삭제. 12345678&lt;build&gt; &lt;plugins&gt; &lt;plugin&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt; &lt;/plugin&gt; &lt;/plugins&gt;&lt;/build&gt; 테스트할 간단한 클래스 작성 1234567package io.kyoung.toy.tpcore;public class CoreModuleTest &#123; public static void coreModuleTest() &#123; System.out.println(\"Hello tp-core!\"); &#125;&#125; Parent 프로젝트 pom.xml에 tp-core 디펜던시 추가123456789&lt;dependencyManagement&gt; &lt;dependencies&gt; &lt;dependency&gt; &lt;groupId&gt;io.kyoung.toy&lt;/groupId&gt; &lt;artifactId&gt;tp-core&lt;/artifactId&gt; &lt;version&gt;$&#123;project.version&#125;&lt;/version&gt; &lt;/dependency&gt; &lt;/dependencies&gt;&lt;/dependencyManagement&gt; tp-api 프로젝트 pom.xml에 tp-core 디펜던시 추가1234&lt;dependency&gt; &lt;groupId&gt;io.kyoung.toy&lt;/groupId&gt; &lt;artifactId&gt;tp-core&lt;/artifactId&gt;&lt;/dependency&gt; tp-api 프로젝트에서 tp-core 클래스 사용 위 스크린샷을 보면 tp-api 프로젝트 main 메소드에서 tp-core 클래스를 사용하는 것을 확인할 수 있다.","categories":[{"name":"SpringBoot","slug":"SpringBoot","permalink":"https://kyoung-k.github.io/categories/SpringBoot/"}],"tags":[{"name":"VSCode","slug":"VSCode","permalink":"https://kyoung-k.github.io/tags/VSCode/"},{"name":"SpringBoot","slug":"SpringBoot","permalink":"https://kyoung-k.github.io/tags/SpringBoot/"},{"name":"Setting","slug":"Setting","permalink":"https://kyoung-k.github.io/tags/Setting/"}]},{"title":"2020년 읽은 책","slug":"book","date":"2020-07-27T15:00:00.000Z","updated":"2020-09-07T15:00:00.000Z","comments":true,"path":"2020/07/28/book/","link":"","permalink":"https://kyoung-k.github.io/2020/07/28/book/","excerpt":"2020년 읽은 책의 리뷰나 거창한 정리 글은 아니고, 읽으면서 부족했던 부분, 추가적으로 깊이 있게 알아봐야 할 내용을 정리한다.","text":"2020년 읽은 책의 리뷰나 거창한 정리 글은 아니고, 읽으면서 부족했던 부분, 추가적으로 깊이 있게 알아봐야 할 내용을 정리한다. 1. 이펙티브 자바 - 제3판 자바 플랫폼 모범 사례 완벽 가이드 ‘이펙티브 자바’의 개정판. 3판에는 자바 7, 8, 9에서 자바 언어와 라이브러리에 추가된 특성들을 녹여냈다. 특히 그동안 객체 지향에 치중하던 자바에 새로 도입된 함수형 프로그래밍 요소도 자세히 알아본다. 람다(lambda)와 스트림(stream)만을 다룬 장을 포함하여 새로운 아이템도 많이 추가되었다. https://www.aladin.co.kr/shop/wproduct.aspx?ItemId=171196410 인터페이스를 활용하는 구체적인 방법 등을 좀 더 알아봐야 할거 같다. 제네릭 관련해선 깊이 있게 다시 봐야 할 거 같고 기본적인 다른 부분들도 추가적으로 시간을 할애해서 좀 더 알아보자. 빌더 패턴 제네릭, 한정적 와일드카드 Enum, 마커 인터페이스 Lamda, Stream Exception 처리 스레드, 병렬 프로그래밍(책) - 2020.07 2. 모던 자바 인 액션 자바 최신 기능을 애플리케이션에 실용적으로 적용하는 방법을 알려준다. 수정처럼 투명한 예제와 꼼꼼한 정보 제공으로 여러분의 노력에 보답할 것이다. 또한 기존 핵심 자바의 지식뿐 아니라 스트림 API, 자바 모듈 시스템 같은 최신 추가 기능, 동시성의 새로운 접근 방법, 함수형 개념 등 읽기 쉽고 유지보수하기 쉬운 코드를 구현하는 데 어떻게 도움이 되는지 배울 수 있다.https://www.aladin.co.kr/shop/wproduct.aspx?ItemId=200069290 이펙티브 자바보다 먼저 읽으려고 회사에 책을 가지고 왔는데 역시였다. 읽는 중 업무로 인해 늦어졌고, 같이 산 이펙티브 자바를 먼저 읽음, 매일 하루 한 시간 ~ 한 시간 반 속독을 목표로 잡았던지라 개념과 포인트만 짚고 빠르게 넘어갔다. 기회가 되면 예제 파일들을 실행하면서 다시 읽어보면 좋을 듯싶다. 함수형 프로그래밍 리액티브 프로그래밍 - 2020.08 3. 스프링 인 액션 - 제5판 리액티브 프로그래밍 지원을 강화한 스프링 5의 모든 것을 탐구한다. 이 책에서는 스프링 5와 스프링 부트 2를 사용해서 애플리케이션을 개발하는 데 필요한 여러 핵심 기능을 알려준다. 스프링 5에서는 특히 새로운 리액티브 웹 프레임워크인 WebFlux를 중점적으로 다룬다. 개발자들은 더 쉽고 확장성이 좋은 웹 애플리케이션을 개발할 수 있다. 《스프링 인 액션(제5판)》에서는 스프링 최신 버전의 모든 것을 다루고 있으므로 개발자들이 스프링의 새로운 진면목을 파악하는 데 도움이 될 것이다.https://www.aladin.co.kr/shop/wproduct.aspx?ItemId=239755024 리액티브 웹 프레임워크인 WebFlux에 관한 내용이 궁금해서 구입해서 봤다. 기대보단 깊이있는 내용은 아니었지만 초심자가 처음 시작하기 위한 개념 및 방법은 좋을거 같다. 이책을 읽고 느낀 점은 토이 프로젝트의 필요성 이다. 이책의 흐름대로 토이 프로젝트를 발전해 나가봐야 할 거 같다. MyBatis, Thymeleaf를 활용한 프로젝트 MyBatis -&gt; JPA로 변경한 프로젝트 MyBatis, JPA를 같이 구성하는 프로젝트 REST API 프로젝트 Spring Cloud를 활용한 마이크로서비스 구축 Spring Actuator를 활용한 관리자 모니터링 프로젝트 WebFlux API 프로젝트 토이 프로젝트에 대한 포스트를 따로 작성하면서 진행해야 할듯 싶다. 되도록이면 실 업무에 도움이 될만한 것을 위주로 구성을 해보면서 진행해보자. 마이크로서비스 (Spring Cloud) Spring Actuator JPA 비동기 메세지(JMS, RabbiMQ등) - 2020.08 4. 인사이드 자바스크립트 자바스크립트의 핵심 원리, 언어적 특성을 정확하고 알기 쉽게 설명하는 책. 국내 개발환경, 입문/초급 개발자 수준에 맞춰 그림과 rule을 통해 이해하기 쉽게 설명하고, jQuery 1.0 소스 분석을 통해서 실제 프로젝트에서 사용된 각종 자바스크립트의 핵심 개념을 설명한다.https://www.aladin.co.kr/shop/wproduct.aspx?ItemId=34486660 5년 전인가 6년 전에 구입한 책을 이제야 읽었다. 자바스크립트 닌자 비급이랑 같이 샀었는데.. 진작에 읽었으면 좋았을 것이다. 일반적으로 잘 알기 힘든 자바스크립트의 특성과 내부 구현 등 책 제목과 같이 자바스크립트를 좀 더 깊게 파고 설명한다. ECMAScript 6 이상의 문법 ES6 이상에서의 자바스크립트 패턴 - 2020.08 5. 자바스크립트 닌자 비급 이 책은 여러분이 자바스크립트에 대한 깨달음을 얻을 수 있게 이끌어 줄 것이다. 이 책은 달인의 관점에서 바라본, 함수와 객체 그리고 클로저 사이의 관계와 같은 핵심 개념을 소개하는 것으로 문을 연다. 여러분은 매일 사용했던 기법들을 새로운 시각에서 바라보고, 알지 못했던 기능과 가능성을 발견하게 되는 과정을 통해서 견습생에서 어느덧 닌자로 성장해 있을 것이다. 마지막 장에 이르게 되면, 번뜩이는 자바스크립트 기반의 애플리케이션을 만들 준비가 되어 있을 것이고, 어쩌면 자신만의 자바스크립트 라이브러리나 프레임워크를 만들게 될 수도 있을 것이다.https://www.aladin.co.kr/shop/wproduct.aspx?ItemId=38913750 인사이드 자바스크립트랑 같이 샀던 책이다. 역시 구매 후 일찍 읽었으면 좋았을 내용이다. 현재는 초반 내용 정도 학습하기 좋은 듯싶다. 크로스 브라우징 관련 내용이 좀 있고, 자바스크립트가 5, 6년 전보단 ECMA 기술 규격에 따라 표준화도 많이 되고 발전했기에 늦게 읽은 게 매우 아쉽다. ECMAScript 6 이상의 문법 jQuery 지양하고 네이티브 문법으로 - 2020.09 6. 자바 ORM 표준 JPA 프로그래밍 자바 ORM 표준 JPA는 SQL 작성 없이 객체를 데이터베이스에 직접 저장할 수 있게 도와주고, 객체와 관계형 데이터베이스의 차이도 중간에서 해결해준다. 이 책은 JPA 기초 이론과 핵심 원리, 그리고 실무에 필요한 성능 최적화 방법까지 JPA에 대한 모든 것을 다룬다. 또한, 스프링 프레임워크와 JPA를 함께 사용하는 방법을 설명하고, 스프링 데이터 JPA, QueryDSL 같은 혁신적인 오픈 소스를 활용해서 자바 웹 애플리케이션을 효과적으로 개발하는 방법을 다룬다.https://www.aladin.co.kr/shop/wproduct.aspx?ItemId=62681446 예전에 인터넷 등을 뒤지면서 JPA 프로젝트를 했을 때 부족한 부분을 많이 느끼고 좀 더 자세히 학습하고 싶은 마음으로 구입했다. 그래도 쌩판 모르는 상태에서 읽은 건 아니라 크게 어려움은 없었고, 기초나 개념, 읽기 전 기대보다 더 많은 것을 얻은 것 같다. 토이 프로젝트를 하면서 다시 부딪혀 봐야겠다. Spring data JPA Spring data (NoSQL) - 2020.09","categories":[{"name":"book","slug":"book","permalink":"https://kyoung-k.github.io/categories/book/"}],"tags":[{"name":"book","slug":"book","permalink":"https://kyoung-k.github.io/tags/book/"}]},{"title":"Hexo 블로그 시작 - Hexo 문법 정리","slug":"hexo-blog-02","date":"2020-07-14T15:00:00.000Z","updated":"2020-09-02T15:00:00.000Z","comments":true,"path":"2020/07/15/hexo-blog-02/","link":"","permalink":"https://kyoung-k.github.io/2020/07/15/hexo-blog-02/","excerpt":"Hexo 블로그 관리를 뜨문뜨문하다 보니 Hexo 관련 명령어 등을 까먹는다","text":"Hexo 블로그 관리를 뜨문뜨문하다 보니 Hexo 관련 명령어 등을 까먹는다 CommandsGenerate12hexo generatehexo g 정적 파일들을 생성합니다. 옵션 설명 -d, --deploy 생성이 종료된 후 deploy 합니다. -w, --watch 파일의 변경사항을 감시(watch)합니다. Deploy12hexo deployhexo d 웹 사이트를 deploy 합니다. 옵션 설명 -g, --generate Deploy 하기 전에 generate를 수행합니다. Clean12hexo cleanhexo c 캐시 파일 (db.json) 및 생성된 파일들 (public) 을 삭제합니다. Basic UsageWriting1hexo new [layout] &lt;title&gt; post 는 기본 layout입니다. 하지만 _config.yml 파일의 default_layout 설정을 변경하여 당신이 만든 것으로 변경할 수 있습니다. 레이아웃 경로 post source/_posts page source draft source/_drafts Front-matterYAML 12title: Hello World date: 2013&#x2F;7&#x2F;13 20:46:25 JSON 12&quot;title&quot;: &quot;Hello World&quot;, &quot;date&quot;: &quot;2013&#x2F;7&#x2F;13 20:46:25&quot; 설정 설명 기본 값 layout 레이아웃 title 타이틀 Filename (posts only) date 발행일 파일이 생성된 날짜 updated 갱신일 파일이 업로드된 날짜 comments 포스트에서 comment 기능을 사용할지 여부 true tags 태그 (page에서는 사용 불가능) categories 카테고리 (page에서는 사용 불가능) permalink 포스트의 기본 permalink를 override합니다. 1234567categories: - Sports - Baseball tags: - Injury - Fight - Shocking Tag Plugins태그 플러그인은 포스트의 태그와는 다릅니다. Octopress로부터 가져온 것으로 특별한 컨텐츠를 당신의 포스트에 빠르게 추가할 수 있도록 도와주는 유용한 방법입니다. Block Quote인용구를 post, 소스, 제목에 추가하기 위한 완벽한 방법입니다. 옵션으로 인용구의 원작자를 추가할 수도 있습니다. Alias: quote 123&#123;% blockquote [author[, source]] [link] [source_link_title] %&#125; content &#123;% endblockquote %&#125; 인자가 없는 일반 인용 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem. 책 인용하기 Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy. David LevithanWide Awake 웹 게시물 인용하기 Every interaction is both precious and an opportunity to delight. Seth GodinWelcome to Island Marketing Code Block코드 조각(snippet)을 포스트에 추가할 수 있는 유용한 기능입니다.Alias: code 123&#123;% codeblock [title] [lang:language] [url] [link text] [additional options] %&#125; code snippet &#123;% endcodeblock %&#125; 언어 지정하기 1[rectangle setX: 10 y: 10 width: 20 height: 20]; Code block에 제목 넣기 Array.map1array.map(callback[, thisArg]) 제목과 URL 넣기 _.compactUnderscore.js12_.compact([0, 1, false, 2, &#39;&#39;, 3]); &#x3D;&gt; [1, 2, 3] Pull Quotepull 인용을 추가하기 위한 방법은 다음과 같습니다. 123&#123;% pullquote [class] %&#125; content &#123;% endpullquote %&#125; jsFiddlejsFiddle을 포함시킬 수 있습니다. 1&#123;% jsfiddle shorttag [tabs] [skin] [width] [height] %&#125; GistGist를 포함시킬 수 있습니다. 1&#123;% gist gist_id [filename] %&#125; iframeiframe을 포함시킬 수 있습니다. 1&#123;% iframe url [width] [height] %&#125; Image이미지의 사이즈를 지정하여 포함시킬 수 있습니다. 1&#123;% img [class names] /path/to/image [width] [height] '\"title text\" \"alt text\"' %&#125; Linktarget=&quot;_blank&quot; 속성으로 링크를 포함시킬 수 있습니다. 1&#123;% link text url [external] [title] %&#125; Include Codesource/downloads/code 폴더에 있는 코드를 포함시킬 수 있습니다. 1&#123;% include_code [title] [lang:language] path/to/file %&#125; YouTubeYouTube video를 포함시킬 수 있습니다. 1&#123;% youtube video_id [type] [cookie] %&#125; tranquilpeaktranquilpeak theme 관련 내용 AlertAlert tag is useful to highlight a content like a tips or a warning 123&#123;% alert [classes] %&#125;content&#123;% endalert %&#125; Praesent diam elit, interdum ut pulvinar placerat, imperdiet at magna. Praesent diam elit, interdum ut pulvinar placerat, imperdiet at magna. Praesent diam elit, interdum ut pulvinar placerat, imperdiet at magna. Praesent diam elit, interdum ut pulvinar placerat, imperdiet at magna. Highlight TextHighlight text tag is useful to highlight an interesting part in a text 123&#123;% hl_text [(classes | hexa code | rgb color | rgba color)] %&#125; content&#123;% endhl_text %&#125; highlight red dignissim ultrices libero. Sed imperdiet urna et quam ultrices tincidunt nec ac magna. Etiam vel pharetra elit.highlight green dignissim ultrices libero. Sed imperdiet urna et quam ultrices tincidunt nec ac magna. Etiam vel pharetra elit.highlight blue dignissim ultrices libero. Sed imperdiet urna et quam ultrices tincidunt nec ac magna. Etiam vel pharetra elit.highlight purple dignissim ultrices libero. Sed imperdiet urna et quam ultrices tincidunt nec ac magna. Etiam vel pharetra elit.highlight orange dignissim ultrices libero. Sed imperdiet urna et quam ultrices tincidunt nec ac magna. Etiam vel pharetra elit.highlight yellow dignissim ultrices libero. Sed imperdiet urna et quam ultrices tincidunt nec ac magna. Etiam vel pharetra elit.highlight cyan dignissim ultrices libero. Sed imperdiet urna et quam ultrices tincidunt nec ac magna. Etiam vel pharetra elit.highlight primary dignissim ultrices libero. Sed imperdiet urna et quam ultrices tincidunt nec ac magna. Etiam vel pharetra elit.highlight success dignissim ultrices libero. Sed imperdiet urna et quam ultrices tincidunt nec ac magna. Etiam vel pharetra elit.highlight warning dignissim ultrices libero. Sed imperdiet urna et quam ultrices tincidunt nec ac magna. Etiam vel pharetra elit.highlight danger dignissim ultrices libero. Sed imperdiet urna et quam ultrices tincidunt nec ac magna. Etiam vel pharetra elit. Tabbed code blockTabbed code blocks are useful to group multiple code blocks related. For example, the source code of a web component (html, css and js). Or compare a source code in different languages. 12345&#123;% tabbed_codeblock [name] [link] %&#125;&lt;!-- tab [lang] --&gt; source code&lt;!-- endtab --&gt;&#123;% endtabbed_codeblock %&#125; examplejscss123function testFunc(a, b) { console.log('hellow');}1234567div.text,#content, li[lang=ru] { font: Tahoma, Chunkfive, sans-serif; background: url('hatch.png') /* wtf? */; color: #F0F0F0 !important; width: 100%; } Wide imageWide image tag is useful to display wide images in full width. It takes entire window width 1&#123;% wide_image /path/to/image [title text] %&#125; A beautiful sunrise tranquilpeakhexo-theme-tranquilpeak","categories":[{"name":"hexo","slug":"hexo","permalink":"https://kyoung-k.github.io/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://kyoung-k.github.io/tags/hexo/"}]},{"title":"Hexo 블로그 시작 - Markdown 문법 정리","slug":"hexo-blog-01","date":"2020-07-13T15:00:00.000Z","updated":"2020-09-02T15:00:00.000Z","comments":true,"path":"2020/07/14/hexo-blog-01/","link":"","permalink":"https://kyoung-k.github.io/2020/07/14/hexo-blog-01/","excerpt":"미루고 미루던 블로그를 구성했다. 수년 전 티스토리 블로그를 잠시 운영했었는데 그 블로그를 다시 꺼내고 싶진 않았고, 여기저기 뒤져보다가 정적 블로그 플랫폼 Hexo를 선택하게 되었다. 거창하게 운영할 욕심은 현재 없고, 느지막이 마음먹은 공부에 대한 것 정리 및 기록, 이슈 그에 대한 해결 등 기록 위주로 포스팅을 할 계획이다. 기록 없이 개발자로 10년 가까이 일을 하면서 부족한 부분이 많았는데(매번 까먹고) 그 부분을 이제야 채워볼까 한다.","text":"미루고 미루던 블로그를 구성했다. 수년 전 티스토리 블로그를 잠시 운영했었는데 그 블로그를 다시 꺼내고 싶진 않았고, 여기저기 뒤져보다가 정적 블로그 플랫폼 Hexo를 선택하게 되었다. 거창하게 운영할 욕심은 현재 없고, 느지막이 마음먹은 공부에 대한 것 정리 및 기록, 이슈 그에 대한 해결 등 기록 위주로 포스팅을 할 계획이다. 기록 없이 개발자로 10년 가까이 일을 하면서 부족한 부분이 많았는데(매번 까먹고) 그 부분을 이제야 채워볼까 한다. Markdown 문법 정리Headers123# This is an &lt;h1&gt; tag## This is an &lt;h2&gt; tag###### This is an &lt;h6&gt; tag Horizontal rules12345* * *********- - ---------------------------------------- Emphasis12345*This text will be italic*_This will also be italic_**This text will be bold**__This will also be bold___You **can** combine them_ This text will be italicThis will also be italicThis text will be boldThis will also be boldYou can combine them ListsUnordered12* Item 1 * Item 2a Item 1 Item 2a Ordered121. Item 1 1. Item 2a Item 1 Item 2a Images12![GitHub Logo](/images/logo.png)Format: ![Alt Text](url) Links12http://github.com - automatic![GitHub](http://github.com) Blockquotes123As Kanye West said:&gt; We're living the future so&gt; the present is our past. We’re living the future sothe present is our past. Inline code12I think you should use an`&lt;addr&gt;` element here instead. I think you should use an&lt;addr&gt; element here instead. Syntax highlighting12345function fancyAlert(arg) &#123; if(arg) &#123; $.facebox(&#123;div:'#foo'&#125;) &#125;&#125; Task Lists1234- [x] @mentions, #refs, [links](), **formatting**, and &lt;del&gt;tags&lt;&#x2F;del&gt; supported- [x] list syntax required (any unordered or ordered list supported)- [x] this is a complete item- [ ] this is an incomplete item @mentions, #refs, links, formatting, and tags supported list syntax required (any unordered or ordered list supported) this is a complete item this is an incomplete item Tables1234First Header | Second Header------------ | -------------Content from cell 1 | Content from cell 2Content in the first column | Content in the second column First Header Second Header Content from cell 1 Content from cell 2 Content in the first column Content in the second column 블로그 관리 TO-DO List 마크다운 문법 정리 Hexo 관련 명령어, Tag Plugin 정리 tranquilpeak 테마 관련 정리 Hexo Seo 설정, 댓글, update 날짜 처리 등 부족한 부분 마무리 하자","categories":[{"name":"hexo","slug":"hexo","permalink":"https://kyoung-k.github.io/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://kyoung-k.github.io/tags/hexo/"}]}],"categories":[{"name":"book","slug":"book","permalink":"https://kyoung-k.github.io/categories/book/"},{"name":"학습","slug":"학습","permalink":"https://kyoung-k.github.io/categories/%ED%95%99%EC%8A%B5/"},{"name":"잡담","slug":"잡담","permalink":"https://kyoung-k.github.io/categories/%EC%9E%A1%EB%8B%B4/"},{"name":"SpringBoot","slug":"SpringBoot","permalink":"https://kyoung-k.github.io/categories/SpringBoot/"},{"name":"hexo","slug":"hexo","permalink":"https://kyoung-k.github.io/categories/hexo/"}],"tags":[{"name":"book","slug":"book","permalink":"https://kyoung-k.github.io/tags/book/"},{"name":"학습","slug":"학습","permalink":"https://kyoung-k.github.io/tags/%ED%95%99%EC%8A%B5/"},{"name":"Toy Project","slug":"Toy-Project","permalink":"https://kyoung-k.github.io/tags/Toy-Project/"},{"name":"복기","slug":"복기","permalink":"https://kyoung-k.github.io/tags/%EB%B3%B5%EA%B8%B0/"},{"name":"VSCode","slug":"VSCode","permalink":"https://kyoung-k.github.io/tags/VSCode/"},{"name":"SpringBoot","slug":"SpringBoot","permalink":"https://kyoung-k.github.io/tags/SpringBoot/"},{"name":"Setting","slug":"Setting","permalink":"https://kyoung-k.github.io/tags/Setting/"},{"name":"hexo","slug":"hexo","permalink":"https://kyoung-k.github.io/tags/hexo/"}]}